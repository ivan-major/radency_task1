{"version":3,"sources":["scripts/tasks.js","scripts/counts.js","scripts/main.js"],"names":["makeTable","items","status","bodyTable","document","querySelector","i","length","row","createElement","cellIcons","key","cell","classList","add","category","insertAdjacentHTML","textContent","created","append","type","setAttribute","id","countsTask","tasks","categories","map","el","taskCategory","Set","countCategoryActive","array","countActive","item","countCategoryArchive","countArchive","active","archive","j","name","content","dates","archivedTasks","options","year","month","day","tableTasks","tableCounts","activeNotes","archiveNotes","form","formChange","createNote","formClose","querySelectorAll","clearTable","innerHTML","updateTable","addEventListener","event","target","matches","closest","filter","task","forEach","push","e","preventDefault","formData","FormData","data","Object","fromEntries","entries","Date","toLocaleString","ind","splice","reset","remove","newTask","date"],"mappings":"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","file":"main.fd107a10.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\n// Rendering of main table with notes\n\nexport const makeTable = (items, status) => {\n  const bodyTable = document.querySelector(\"#items\");\n\n  for (let i = 0; i < items.length; i++) {\n    const row = document.createElement(\"tr\");\n    const cellIcons = document.createElement(\"td\");\n\n    for (const key in items[i]) {\n      if (key !== \"id\" && key !== \"type\") {\n        const cell = document.createElement(\"td\");\n\n        if (key === \"name\") {\n          cell.classList.add(\"task__item\", \"name\");\n\n          switch (items[i].category) {\n            case \"Task\":\n              cell.insertAdjacentHTML(\n                \"afterbegin\",\n                `\n                  <div class=\"name__icon\">\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"#fff\">\n                      <path d=\"M13 17c0 1.104 0.894 2 2 2 1.104 0 2-0.896 2-2 0-1.106-0.896-2-2-2-1.106 0-2 0.894-2 2zM3 17c0 1.104 0.895 2 2 2 1.103 0 2-0.896 2-2 0-1.106-0.897-2-2-2-1.105 0-2 0.894-2 2zM6.547 12.172l11.068-3.162c0.211-0.061 0.385-0.289 0.385-0.51v-5.5h-14v-1.6c0-0.22-0.181-0.4-0.399-0.4h-3.202c-0.219 0-0.399 0.18-0.399 0.4v1.6h2l1.91 8.957 0.090 0.943v1.649c0 0.219 0.18 0.4 0.4 0.4h13.2c0.22 0 0.4-0.182 0.4-0.4v-1.549h-11.248c-1.15 0-1.174-0.551-0.205-0.828z\"></path>\n                    </svg>\n                  </div>\n                  ${items[i][key]}\n                `\n              );\n              break;\n            case \"Random Thought\":\n              cell.insertAdjacentHTML(\n                \"afterbegin\",\n                `\n                  <div class=\"name__icon\">\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"#fff\">\n                      <path d=\"M16 2c8.837 0 16 5.82 16 13s-7.163 13-16 13c-0.849 0-1.682-0.054-2.495-0.158-3.437 3.437-7.539 4.053-11.505 4.144v-0.841c2.142-1.049 4-2.961 4-5.145 0-0.305-0.024-0.604-0.068-0.897-3.619-2.383-5.932-6.024-5.932-10.103 0-7.18 7.163-13 16-13z\"></path>\n                    </svg>\n                  </div>\n                  ${items[i][key]}\n                `\n              );\n              break;\n            case \"Idea\":\n              cell.insertAdjacentHTML(\n                \"afterbegin\",\n                `\n                  <div class=\"name__icon\">\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"32\" viewBox=\"0 0 20 32\" fill=\"#fff\">\n                      <path d=\"M10 4.008c3.311 0 6 2.699 6 6.016 0 1.895-0.863 3.637-2.373 4.773-2.258 1.707-3.17 3.594-3.484 5.18h-0.286c-0.313-1.586-1.228-3.473-3.484-5.18-1.508-1.137-2.375-2.879-2.375-4.773 0-3.317 2.691-6.016 6.002-6.016M10 0c-5.523 0-10 4.488-10 10.023 0 3.282 1.545 6.149 3.969 7.977 1.115 0.844 2.035 1.93 2.035 3.43v2.555h7.994v-2.555c0-1.5 0.92-2.586 2.033-3.43 2.426-1.828 3.969-4.695 3.969-7.977 0-5.535-4.477-10.023-10-10.023v0zM6 28h8v4h-8z\"></path>\n                    </svg>\n                  </div>\n                  ${items[i][key]}\n                `\n              );\n              break;\n            default:\n              break;\n          }\n        } else if (key === \"dates\" && items[i][key]) {\n          cell.textContent = `${items[i].created}, ${items[i][key]}`;\n        } else {\n          cell.textContent = items[i][key];\n        }\n\n        cell.classList.add(\"task__item\");\n\n        row.append(cell);\n      }\n    }\n\n    cellIcons.insertAdjacentHTML(\n      \"afterbegin\",\n      `\n        <button class=\"task__button icon icon_update\"></button>\n        ${\n          items[i].type !== \"archive\"\n            ? '<button class=\"task__button icon icon_archive\"></button>'\n            : \"<span></span>\"\n        }\n        <button class=\"task__button icon icon_delete\"></button>\n      `\n    );\n\n    cellIcons.classList.add(\"task__item\", \"task__item_icons\");\n    row.setAttribute(\"id\", items[i].id);\n    row.append(cellIcons);\n\n    row.classList.add(\"hometask__item\", \"task\");\n\n    if (items[i].type !== \"archive\") {\n      bodyTable.append(row);\n    } else if (items[i].type === \"archive\" && status === \"archive\") {\n      bodyTable.append(row);\n    }\n  }\n};\n","\"use strict\";\n// Rendering table of note`s categories count\n\nexport const countsTask = (tasks) => {\n  const categories = tasks.map((el) => el.category);\n  const taskCategory = [...new Set(categories)];\n\n  const countCategoryActive = (category, array) => {\n    let countActive = 0;\n\n    for (let item in array) {\n      if (category === array[item].category && array[item].type === \"active\") {\n        countActive++;\n      }\n    }\n\n    return countActive;\n  };\n\n  const countCategoryArchive = (category, array) => {\n    let countArchive = 0;\n\n    for (let item in array) {\n      if (category === array[item].category && array[item].type === \"archive\") {\n        countArchive++;\n      }\n    }\n\n    return countArchive;\n  };\n\n  const bodyTable = document.querySelector(\"#counts\");\n\n  for (let i = 0; i < taskCategory.length; i++) {\n    const active = countCategoryActive(taskCategory[i], tasks);\n    const archive = countCategoryArchive(taskCategory[i], tasks);\n\n    const row = document.createElement(\"tr\");\n\n    for (let j = 1; j <= 3; j++) {\n      const cell = document.createElement(\"td\");\n\n      switch (j) {\n        case 1:\n          cell.textContent = taskCategory[i];\n          cell.classList.add(\"task__item\");\n          break;\n\n        case 2:\n          cell.textContent = active;\n          cell.classList.add(\"task__item\", \"task__item_count\");\n          break;\n\n        case 3:\n          cell.textContent = archive;\n          cell.classList.add(\"task__item\", \"task__item_count\");\n          break;\n\n        default:\n          break;\n      }\n\n      row.classList.add(\"hometask__item\");\n      row.append(cell);\n    }\n\n    if (active !== 0 || archive !== 0) {\n      bodyTable.append(row);\n    }\n  }\n};\n","\"use strict\";\n// import { tasksData } from \"./data\";\nimport { makeTable } from \"./tasks\";\nimport { countsTask } from \"./counts\";\n\nlet tasks = [\n  {\n    id: 1,\n    name: \"Shoping list\",\n    created: \"4/21/2021\",\n    category: \"Task\",\n    content: \"Tomatoes, bread\",\n    dates: \"\",\n    type: \"active\",\n  },\n  {\n    id: 2,\n    name: \"The teory of evolution\",\n    created: \"4/27/2021\",\n    category: \"Random Thought\",\n    content: \"The evolution\",\n    dates: \"\",\n    type: \"active\",\n  },\n  {\n    id: 3,\n    name: \"New Feature\",\n    created: \"3/5/2021\",\n    category: \"Idea\",\n    content: \"Implement new feater\",\n    dates: \"5/5/2021\",\n    type: \"active\",\n  },\n  {\n    id: 4,\n    name: \"Shoping list\",\n    created: \"5/6/2021\",\n    category: \"Task\",\n    content: \"Bread, milk, tomato\",\n    dates: \"\",\n    type: \"active\",\n  },\n  {\n    id: 5,\n    name: \"About React\",\n    created: \"5/6/2021\",\n    category: \"Random Thought\",\n    content: \"React evolution\",\n    dates: \"\",\n    type: \"active\",\n  },\n  {\n    id: 6,\n    name: \"New Feature\",\n    created: \"5/7/2021\",\n    category: \"Idea\",\n    content: \"Implement new script\",\n    dates: \"5/8/2021\",\n    type: \"active\",\n  },\n];\nlet archivedTasks = [];\nlet status = \"\";\n\nconst options = {\n  year: \"numeric\",\n  month: \"numeric\",\n  day: \"numeric\",\n};\n\nmakeTable(tasks);\ncountsTask(tasks);\n\nconst tableTasks = document.querySelector(\"#items\");\nconst tableCounts = document.querySelector(\"#counts\");\nconst activeNotes = document.querySelector(\"#active\");\nconst archiveNotes = document.querySelector(\"#archive\");\nconst form = document.querySelector(\"#form\");\nconst formChange = document.querySelector(\".form_change\");\nconst createNote = document.querySelector(\"#create-note\");\nconst formClose = document.querySelectorAll(\".form__close\");\n\nconst clearTable = () => {\n  tableTasks.innerHTML = \"\";\n  tableCounts.innerHTML = \"\";\n};\n\nconst updateTable = (item, status = \"active\") => {\n  clearTable();\n  makeTable(item);\n  countsTask(item, status);\n};\n\n//Functionality of note changing\ntableTasks.addEventListener(\"click\", (event) => {\n  if (event.target.matches(\".icon_delete\")) {\n    const item = event.target.closest(\".task\");\n\n    tasks = tasks.filter((task) => task.id !== +item.id);\n    archivedTasks = archivedTasks.filter((task) => task.id !== +item.id);\n  }\n\n  if (event.target.matches(\".icon_archive\")) {\n    const item = event.target.closest(\".task\");\n\n    tasks.forEach((task) => {\n      if (task.id === +item.id) {\n        task.type = \"archive\";\n        archivedTasks.push(task);\n      }\n    });\n  }\n\n  if (event.target.matches(\".icon_update\")) {\n    const item = event.target.closest(\".task\");\n\n    formChange.classList.add(\"form_active\");\n\n    formChange.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      const formData = new FormData(formChange);\n\n      const data = Object.fromEntries(formData.entries());\n\n      tasks.forEach((el) => {\n        if (el.id === +item.id) {\n          el.content = data.content ? data.content : el.content;\n          el.dates = data.dates\n            ? new Date(data.dates).toLocaleString(\"en-us\", options)\n            : el.dates;\n          el.type = data.type;\n\n          if (data.type === \"archive\") {\n            archivedTasks.push(el);\n          }\n        }\n\n        updateTable(tasks);\n      });\n\n      archivedTasks.forEach((el, ind) => {\n        if (el.id === +item.id) {\n          el.content = data.content ? data.content : el.content;\n          el.dates = data.dates\n            ? new Date(data.dates).toLocaleString(\"en-us\", options)\n            : el.dates;\n          el.type = data.type;\n\n          if (data.type === \"active\") {\n            archivedTasks.splice(ind, 1);\n          }\n        }\n\n        clearTable();\n        countsTask(tasks);\n        makeTable(archivedTasks, status);\n      });\n\n      formChange.reset();\n      formChange.classList.remove(\"form_active\");\n    });\n  }\n\n  if (!status) {\n    updateTable(tasks);\n  } else {\n    clearTable();\n    countsTask(tasks);\n    makeTable(archivedTasks, status);\n  }\n});\n\n//Functionality of showing active notes\nactiveNotes.addEventListener(\"click\", () => {\n  status = \"\";\n  updateTable(tasks);\n});\n\n//Functionality of showing archive notes\narchiveNotes.addEventListener(\"click\", () => {\n  status = \"archive\";\n\n  clearTable();\n  countsTask(tasks);\n  makeTable(archivedTasks, status);\n});\n\n//Functionality of adding new note\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  const formData = new FormData(form);\n\n  const data = Object.fromEntries(formData.entries());\n\n  const newTask = {\n    id: tasks[tasks.length - 1].id + 1,\n    ...data,\n    dates: \"\",\n    type: \"active\",\n  };\n\n  const date = new Date(data.created).toLocaleString(\"en-us\", options);\n\n  tasks.push({ ...newTask, created: date });\n  form.reset();\n  form.classList.remove(\"form_active\");\n\n  updateTable(tasks);\n});\n\ncreateNote.addEventListener(\"click\", () => {\n  form.classList.add(\"form_active\");\n});\n\nformClose.forEach((el) => {\n  el.addEventListener(\"click\", (event) => {\n    const form = event.target.closest(\".form\");\n\n    form.classList.remove(\"form_active\");\n  });\n});\n"]}